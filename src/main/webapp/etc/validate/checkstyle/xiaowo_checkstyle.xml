<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html.

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).

    To completely disable a check, just comment it out or delete it from the file.
 
    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov. 
 -->

<module name = "Checker">
    <!--编码格式-->
    <property name="charset" value="UTF-8"/>

    <!-- 报警级别 
    <property name="severity" value="warning"/>-->
 
    <!-- 检查文件类型 -->
    <property name="fileExtensions" value="java, properties, xml"/>
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="FileTabCharacter">
        	<property name="severity" value="error"/>
            <property name="eachLine" value="true"/>
            <message key="containsTab" value="本行包含 tab 字符"/>
        </module>

    <module name="TreeWalker">
        <module name="OuterTypeFilename">
        	<property name="severity" value="error"/>
            <message key="type.file.mismatch" value="顶级类名称与源文件名不同"/>
        </module>
        <module name="IllegalTokenText">
        	<property name="severity" value="error"/>
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="drop\s+.*|truncate\s+.*|alter\s+.*"/>
            <message key="illegal.token.text" value="文件中包含非法字符串  {0}"/>
            <property name="ignoreCase" value="true"/>
        </module>
        <!-- 
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module> -->
        <module name="LineLength">
        	<property name="severity" value="error"/>
            <property name="max" value="200"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
            <message key="maxLineLen" value="每一行的最大长度为120个字符。"/>
        </module>
        <module name="AvoidStarImport">
        	<property name="severity" value="error"/>
            <message key="import.avoidStar" value="避免引用包时使用*号."/>
        </module>
        <module name="OneTopLevelClass">
        	<property name="severity" value="error"/>
            <message key="one.top.level.class" value="顶级类 {0} 应位于它自己的源文件中。"/>
        </module>
        <!--
        <module name="NoLineWrap">
            <message key="no.line.wrap" value="{0} 不应换行。"/>
        </module>-->
        <module name="EmptyBlock">
        	<property name="severity" value="error"/>
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
            <message key="block.empty" value="{0}空的代码块."/>
            <message key="block.noStmt" value="至少有一条代码语句."/>
        </module>
        <module name="NeedBraces">
        	<property name="severity" value="error"/>
            <message key="needBraces" value="代码中缺失大括号"/>
        </module>
        <module name="LeftCurly">
        	<property name="severity" value="error"/>
            <property name="maxLineLength" value="120"/>
            <message key="line.previous" value="左侧大括号必须放在前一行代码的行尾，不计入到120个字符内"/>
        </module>
        <module name="RightCurly">
        	<property name="severity" value="error"/>
            <property name="id" value="RightCurlySame"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
            <message key="line.alone" value="右侧大括号必须放在单独一行"/>
            <message key="line.new" value="右侧大括号必须放在一个新行"/>
            <message key="line.same" value="右侧大括号与下一语句放在同一行"/>
        </module>
         <!-- 
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <message key="ws.notFollowed"
             value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
             <message key="ws.notPreceded"
             value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
         -->
        <module name="OneStatementPerLine">
        	<property name="severity" value="error"/>
             <message key="multiple.statements.line" value="禁止一行有多句代码。"/>
        </module>
        <module name="MultipleVariableDeclarations">
        	 <property name="severity" value="error"/>
	         <message key="multiple.variable.declarations.comma" value="每一个变量的定义必须在它的声明处，且在同一行。" />
	         <message key="multiple.variable.declarations" value="每一行只能定义一个变量。" />
        </module>
        <module name="ArrayTypeStyle">
        	<property name="severity" value="error"/>
            <message key="array.type.style" value="数组定义要采取String[] args这种方式。"/>
        </module>
        <module name="MissingSwitchDefault">
        	<property name="severity" value="error"/>
             <message key="missing.switch.default" value="Switch 块未定义 default 。"/>
        </module>
         <!-- 
		<module name="FallThrough">
			<property name="severity" value="warning" />
			<property name="checkLastCaseGroup" value="true" />
			<message key="fall.through.last" value="缺少break，return，throw，continue" />
			<message key="fall.through" value="缺少break，return，throw，continue" />
		</module>-->
        <module name="UpperEll">
        	<property name="severity" value="error"/>
			<message key="upperEll" value="Long型定义应该使用大写的 ''L''." />
		</module>
        <module name="ModifierOrder">
			<property name="severity" value="warning" />
			<message key="mod.order" value="''{0}'' 修饰符顺序颠倒 ." />
		</module> 
       <!-- <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>-->
        <module name="PackageName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern" value="包名 ''{0}''要匹配 ''{1}''的格式（所有字母全部小写）."/>
        </module>
        <module name="TypeName">
        	<property name="severity" value="error"/>
            <message key="name.invalidPattern" value="名字 ''{0}'' 要符合 ''{1}''的格式（建议每个单词的首字母大写）."/>
        </module>
        <module name="MemberName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="变量 ''{0}'' 要匹配''{1}''的格式（建议除首单词外的单词的首字母小写）."/>
        </module>
        <module name="ParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern" value="变量 ''{0}''要匹配''{1}''的格式，建议除首单词外的每个单词的首字母大写."/>
        </module>
      <!--   <module name="CatchParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern" value="变量 ''{0}''要匹配''{1}''的格式，建议除首单词外的每个单词的首字母大写."/>
        </module> -->
        <module name="LocalVariableName">
        	<property name="severity" value="error"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern" value="变量 ''{0}''要匹配''{1}''的格式，建议除首单词外的每个单词的首字母大写."/>
        </module>
        <module name="ClassTypeParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="类 名''{0}''要匹配''{1}''的格式，建议首字母大写."/>
        </module>
        <!-- 
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module> -->
        <module name="InterfaceTypeParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="接口名''{0}''要匹配''{1}''的格式，建议首字母大写."/>
        </module>
        <!--
        <module name="NoFinalizer"/>
        
        <module name="GenericWhitespace">
            <message key="ws.followed"
             value="GenericWhitespace ''{0}'' is followed by whitespace."/>
             <message key="ws.preceded"
             value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
             <message key="ws.illegalFollow"
             value="GenericWhitespace ''{0}'' should followed by whitespace."/>
             <message key="ws.notPreceded"
             value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module> -->
        <module name="Indentation">
        	<property name="severity" value="error"/>
            <property name="basicOffset" value="4"/>
            <message key="indentation.error" value="你缩进了{1}个空格，正确应该缩进 {2}个空格。"/>
      		<message key="indentation.child.error" value="你缩进了{1}个空格，正确应该缩进 {2}个空格。"/>
        </module>
        <!-- 
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="1"/>
        </module> -->
        <module name="OverloadMethodsDeclarationOrder">
			<property name="severity" value="warning" />
        	<message key="name.invalidPattern" value="重载方法应写在一起，上一个重载方法位于第''{0}''行。"/>
        </module>
        <!--
        <module name="VariableDeclarationUsageDistance"/>
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
            <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
        </module>
        <module name="MethodParamPad"/>
        <module name="ParenPad"/>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
        </module>
        <module name="JavadocParagraph"/>
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="minLineCount" value="2"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
        </module>-->
        <module name="MethodName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern" value="方法名 ''{0}''要匹配''{1}''的格式，建议除首单词外的每个单词的首字母大写."/>
        </module>
        <!-- 
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module> -->
        <module name="EmptyCatchBlock">
        	<property name="severity" value="error"/>
            <property name="exceptionVariableName" value="expected"/>
            <message key="catch.block.empty" value="空 catch 块。"/>
        </module>
        <!-- 
        <module name="CommentsIndentation"/> -->
        
        <!-- google模板中未定义的 -->
        <module name="UnusedImports">
        	<property name="severity" value="error"/>
        	<message key="import.unused" value="无用导入 - {0} 。"/>
        </module>
		<module name="ParameterNumber">
			<property name="severity" value="warning" />
			<property name="max" value="7"/>
			<property name="tokens" value="CTOR_DEF,METHOD_DEF" />
			<message key="maxParam" value="方法参数个数不能超过7个。" />
		</module>
		<module name="CyclomaticComplexity">
			<property name="severity" value="warning" />
			<property name="max" value="7" />
			<message key="cyclomaticComplexity" value="方法内嵌套不能超过4级。" />
		</module>
		<!--
		<module name="BooleanExpressionComplexity">
			<property name="severity" value="warning" />
			<property name="max" value="7" />
			<property name="tokens" value="BXOR,BAND,LAND,BOR,LOR" />
			<message key="booleanExpressionComplexity" value="布尔表达式的复杂度不能超过7." />
		</module>-->
		<!--检查消除代码中的幻数-->
	    <module name="MagicNumber">
	    	<property name="severity" value="error"/>
	    	<message key="magic.number" value="代码中不应出现魔术数字（直接常数）。" />
	    </module>
	    <module name="ConstantName">
	    	<property name="severity" value="error"/>
      		<message key="name.invalidPattern" value="常量的命名应该为全大写" />
    	</module>
    	<module name="DefaultComesLast">
    		<property name="severity" value="error"/>
      		<message key="default.comes.last" value="Default 放在 switch 语句的最后."/>
    	</module>
    	<module name="SimplifyBooleanReturn">
			<property name="severity" value="warning" />
     	 	<message key="simplify.boolreturn" value="不必要的条件逻辑"/>
    	</module>
	    <module name="HiddenField">
	    	<property name="severity" value="error"/>
	      	<property name="ignoreConstructorParameter" value="true"/>
	      	<property name="ignoreSetter" value="true"/>
	      	<property name="ignoreAbstractMethods" value="true"/>
	      	<message key="hidden.field" value="''{0}''局部变量或参数隐藏了类中的变量"/>
	    </module>
	    <module name="EqualsHashCode">
	    	<property name="severity" value="error"/>
      		<message key="equals.noHashCode" value="重写了''equals()''方法 ，缺失了''hashCode()'方法'."/>
    	</module>
    	<module name="NestedIfDepth">   
			<property name="severity" value="warning" />
            <property name="max" value="3" /> 
            <message key="nested.if.depth" value="至多{1,number,integer}层 if，目前{0,number,integer}层"/>  
        </module>
        <module name="EqualsAvoidNull">
			<property name="severity" value="warning" />
      		<message key="equals.avoid.null" value="字符串值最好在equals方法的左侧"/>
    	</module>
    	 <module name="EmptyStatement">
      		<property name="severity" value="warning"/>
      		<message key="empty.statement" value="；前面缺失语句"/>
    	</module>
    	<module name="WhitespaceAfter">
    		<property name="severity" value="error"/>
      		<property name="tokens" value="COMMA,SEMI"/>
      		<message key="ws.notFollowed" value="''{0}''后面保留一个空格."/>
    	</module>
    	 <module name="FinalClass">
			<property name="severity" value="warning" />
      		<message key="final.class" value="类{0}要声明是final类，或者删除其私有构造函数."/>
    	</module>
    	<module name="IllegalImport">
    		<property name="severity" value="error"/>
      		<message key="import.illegal" value="{0}为非法包."/>
    	</module>
	    <module name="RedundantImport">
			<property name="severity" value="warning" />
	      	<message key="import.same" value="引入了同一个包中的类- {0}。"/>
	      	<message key="import.duplicate" value="在第{0,number,integer}行已经引入了此包- {1}。"/>
	      	<message key="import.lang" value="{0}，可以去掉。"/>
	    </module>
	    <module name="AbstractClassName">
			<property name="severity" value="warning" />
  			<property name="ignoreModifier" value="true"/>
  			<message key="illegal.abstract.class.name" value="名称 ''{0}'' 不能匹配表达式： ''{1}'' "/>
		</module>
		
    </module>
</module>
